<template>
  <div>
  <div id="customer-list">
    <v-container>
      <v-card class="c-customer-form">
        <v-card-title class="c-customer-form__title">Customer</v-card-title>
        <v-form>
          <v-text-field label="{{fieldName}}" v-model="{{entityName}}.{{fieldName}}"></v-text-field>
          <h1>{{fieldName}}</h1>
          <v-text-field label="{{fieldPartName}}" v-model="{{entityName}}.{{fieldName}}.{{fieldPartName}}"></v-text-field>
          <v-text-field label="number" v-model="customer.address.number"></v-text-field>
          <v-text-field label="city" v-model="customer.address.city"></v-text-field>
          <v-text-field label="state" v-model="customer.address.state"></v-text-field>
          <v-text-field label="country" v-model="customer.address.country"></v-text-field>
          <v-text-field label="postalcode" v-model="customer.address.postalcode"></v-text-field>
        </v-form>
      <v-card-actions class="c-customer-form-actions">
        <v-btn class="success" @click="submit">{{actionText}}</v-btn>
        <v-btn class="cancel" @click="cancel">Cancel</v-btn>
      </v-card-actions>
    </v-card>
   </v-container>
  </div>
  </div>
</template>

<script>
export default {
  name: 'CustomerForm',
  props: {
    customer: Object,
    isUpdating: Boolean,
  },
  data: () => ({
    valid: false,
    actionText: 'Add Customer',
  }),
  watch: {
    // a computed getter
    isUpdating(updating) {
      this.actionText = updating ? 'Update Customer' : 'Add Customer';
    },
  },
  methods: {
    submit() {
      if (this.isUpdating) {
        this.$emit('update-customer', this.customer);
      } else {
        this.$emit('add-customer', this.customer);
      }
    },
    cancel() {
      this.$emit('cancel-add-customer');
    },
  },
};
</script>
